<%- contentFor('styles') %>
<%- contentFor('scripts') %>
<script>
const generateTitle = () => {
  return '<h1 class="text-center mb-3">Pixel Canvas</h1>'
}

const generateCanvas = ({ isLoading, pixels }) => {
  if (isLoading) return `<div class="text-center mb-3">Loading...</div>`

  return `
    <div id="pixel-wrapper">
      ${
        pixels.map((row, y) => {
          return `

          <div id="color-modal" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-dialog-centered" role="document">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title">Paint this Pixel!</h5>
                  <button id="modal-close" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                  <div class="container">
                    <label for="colorpicker">Choose pixel color:</label>
                    <input type="color" id="colorpicker" value="#0000ff">
                  </div>
                </div>
                <div class="modal-footer">
                  <button id="confirm" type="button" class="btn btn-primary">Confirm</button>
                  <button id="modal-close" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
              </div>
            </div>
          </div>

          <div
            class="row justify-content-center align-items-center flex-nowrap mx-auto"
            style="width: ${row.length * 9}px
            border: .5px solid #C8C8C8;
            "
          >
            ${row.map((col, x) => {
            return `
                  <div
                    class="pixel-col p-0"
                    style="
                      background-color: ${col.RGB};
                      width: 9px;
                      height: 9px;
                      border: .1px solid #C8C8C8;
                    "
                  ></div>
                `
          }).join('')
            }
          </div>
        `
        }).join('')
      }
    </div>
  `
}

let currentPixel

const generatePage = (info) => {
  const $page = $('#pages-Pixel-index')
  const $title = generateTitle(info)
  const $canvas = generateCanvas(info)
  $page.html('').append($title).append($canvas)
}

const getPixels = () => {
  axios({
        method: 'GET',
        url: '/api/pixel'
      }).then((resp) => {
        var pixels = resp.data.pixel
        //console.log(pixels)
        generatePage({pixels})
      })
}

const handlePixelClick = (e) => {
  e.preventDefault()
  //console.log(e)
  console.log(e.target)
  currentPixel = e.target
  $("#color-modal").modal('show')
  return currentPixel
}

const handleModalClick = (e) => {
  e.preventDefault()
  console.log('closed')
  $("#color-modal").modal('hide')
}

const handleModalConfirm = (e) => {
  e.preventDefault()
  console.log('confirm')
  const colorHex = $('#colorpicker')
  console.log(colorHex.val())
  console.log(currentPixel)
  $(currentPixel).css("background-color", colorHex.val())
  $("#color-modal").modal('hide')
}

$(document).ready(() => {
  generatePage({ isLoading: true })
  getPixels()
  $('#pages-Pixel-index').on('click', '.pixel-col', handlePixelClick)
  $('#pages-Pixel-index').on('click', '#modal-close', handleModalClick)
  $('#pages-Pixel-index').on('click', '#confirm', handleModalConfirm)
})


</script>

<%- contentFor('body') %>
<div id="pages-Pixel-index" class="mb-6"></div>
