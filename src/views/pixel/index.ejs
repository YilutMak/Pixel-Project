<%- contentFor('styles') %>
<%- contentFor('scripts') %>
<script>
var socket = io();
let currentPixel
let user
let pixelData
let coolDown = 0
let currentUser
let previousColor


const generateTitle = () => {
  return '<h1 class="text-center mb-3">Pixel Canvas</h1>'
}

const generateCanvas = ({ isLoading, pixels }) => {
  if (isLoading) return `<div class="text-center mb-3">Loading...</div>`
  return `
    <div id="pixel-taken-modal" class="modal" tabindex="-1" role="dialog">
    </div>

    <div id="sign-in-modal" class="modal" tabindex="-1" role="dialog">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Sign in required</h5>
            <button id="modal-close" type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-primary" onclick="window.location.href='/auth/login';">
              log in
            </button>
            <button id="modal-close" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>


    <div id="color-modal" class="modal" tabindex="-1" role="dialog">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Paint this Pixel!</h5>
            <button id="modal-close" type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div class="container">
              <label for="colorpicker">Choose pixel color:</label>
              <input type="color" id="colorpicker" value="${previousColor? previousColor :"#000000" }">
            </div>
          </div>
          <div class="modal-footer">
            <button id="confirm" type="button" class="btn btn-primary">Confirm</button>
            <button id="modal-close" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>

    <div id="pixel-wrapper">
      ${
        pixels.map((row, y) => {
          return `
          <div
            class="row justify-content-center align-items-center flex-nowrap mx-auto"
            style="width: ${row.length * 9}px
            border: .5px solid #C8C8C8;
            "
          >
            ${row.map((col, x) => {
            return `
                  <div
                    id="x-${x}-y-${y}"
                    data-x="${x}"
                    data-y="${y}"
                    class="pixel-col p-0"
                    style="
                      background-color: ${col.RGB};
                      width: 9px;
                      height: 9px;
                      border: .1px solid #C8C8C8;
                    "
                  ></div>
                `
          }).join('')
            }
          </div>
        `
        }).join('')
      }
    </div>
  `
}

const generatePage = async(info) => {
  const $page = $('#pages-Pixel-index')
  const $title = generateTitle(info)
  const $canvas = generateCanvas(info)
  $page.html('').append($title).append($canvas)
  console.log('page generated')
}

const getPixels = async() => {
  console.log('page updated')
  axios({
        method: 'GET',
        url: '/api/pixels'
      }).then((resp) => {
        var pixels = resp.data.pixel
        //console.log(pixels)
        generatePage({pixels})
      })
}

const getMyProfileIndex = () => {
  axios({
    method: 'GET',
    url: '/api/my/profile',
  }).then((resp) => {
    user = { user: resp.data }
    currentUser = { user: resp.data }
    console.log("signed in")
  }).catch(() => {
    user = null
    console.log("please sign in")
  })
}

const getPixel = async (xCoord, yCoord) => {
  await axios({
    method: 'GET',
    url: '/api/pixel',
    params : {
      x: xCoord,
      y: yCoord
    }
  }).then((resp) => {
    console.log('pixel found')
    //console.log(resp.data)
    pixelData = resp.data
  }).catch(() => {
    console.log('pixel not found')
  })
}

const handlePixelClick = (e) => {
  e.preventDefault()
  const $elem = $(e.currentTarget)
  currentPixel = $elem
  const xCoord = $elem.data('x')
  const yCoord = $elem.data('y')
  //console.log(xCoord)
  //console.log(yCoord)

const $pixelTakenInfo = (pixelData, timeLeft) => {
  return `
        <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">This pixel is occupied!</h5>
            <button id="modal-close" type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div id="pixel-taken-body" class="modal-body">
            <p> Pixel created: <b>${pixelData.user.username}</b> </p>
            <p>Color:
              <div class="d-inline-flex" style="border: .1px solid #C8C8C8; background-color:${pixelData.RGB}; Width:30px; height:30px"></div>  </p>
            <p>Unlocks in: <b>${timeLeft} mins</b> </p>
          </div>
          <div class="modal-footer">
            <button id="modal-close" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
  `
}

const pixelPress = async() => {
  await getPixel(xCoord, yCoord)
  //console.log(pixelData.x)
  //console.log(pixelData.y)
  //console.log(pixelData.timeStamp)
  const timeCreated = (Math.floor((new Date(pixelData.timeStamp)) / 1000))/60
  const currentTime = (Math.floor((Date.now()) / 1000))/60
  //console.log(timeCreated)
  //console.log(currentTime)
  //console.log(Math.floor(currentTime-timeCreated))

  if (currentTime - timeCreated > coolDown) {
    if (user) {
      $("#color-modal").modal('show')
    } else {
      $("#sign-in-modal").modal('show')
    }
  }else{
    //console.log(pixelData)
    const timeLeft = Math.floor(coolDown - (currentTime - timeCreated))
    //console.log(timeLeft)
    const $pixelTakenModal = $('#pixel-taken-modal')
    $pixelTakenModal.html('').append($pixelTakenInfo(pixelData,timeLeft))
    $("#pixel-taken-modal").modal('show')
  }
}

  pixelPress(xCoord, yCoord)
}

const handleModalClick = (e) => {
  e.preventDefault()
  console.log('closed')
  //console.log($(e.target).parents(".modal"))
  //$("#color-modal").modal('hide')
  $(e.target).parents(".modal").modal('hide')
}

const handleModalConfirm = (e) => {
  e.preventDefault()
  console.log('confirm')
  const colorHex = $('#colorpicker')
  const color = colorHex.val()
  previousColor = color

  //console.log(currentPixel)
  //console.log(currentUser)
  //console.log(pixelData)
  //console.log(color)

  socket.emit('pixel update', pixelData, color, currentUser)


  socket.on('pixel updated', async(pixelData, color, currentUser, timeStamp) => {
    await getPixels()
    $("#color-modal").modal('hide')
    const username = currentUser.user.username
    await getPixel(pixelData.x, pixelData.y)
    //console.log(pixelData)
    const updateTime = (Math.floor((new Date(timeStamp)) / 1000) / 60 )
    const currentTime = (Math.floor((Date.now()) / 1000)) / 60
    timeLeft = Math.floor(coolDown - (currentTime - updateTime))
    console.log('time left:', timeLeft)

    $pixelUpdatedInfo = (username, timeLeft, color) => {
      return `
        <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Pixel successfully painted!</h5>
            <button id="modal-close" type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div id="pixel-taken-body" class="modal-body">
            <p> Pixel created: <b>${username}</b> </p>
            <p>Color:
              <div class="d-inline-flex" style="border: .1px solid #C8C8C8; background-color:${color}; Width:30px; height:30px"></div></p>
            <p>Unlocks in: <b>${timeLeft} mins </b> </p>
          </div>
          <div class="modal-footer">
            <button id="modal-close" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
      `
    }
  //$(currentPixel).css("background-color", colorHex.val())


  const $pixelTakenModal = $('#pixel-taken-modal')
  $pixelTakenModal.html('').append($pixelUpdatedInfo(username, timeLeft, color))
  $("#pixel-taken-modal").modal('show')
  console.log('modal added')
  })
}


$(document).ready(() => {
  generatePage({ isLoading: true })
  getPixels()
  getMyProfileIndex()
  $('#pages-Pixel-index').on('click', '.pixel-col', handlePixelClick)
  $('#pages-Pixel-index').on('click', '#modal-close', handleModalClick)
  $('#pages-Pixel-index').on('click', '#confirm', handleModalConfirm)
})


</script>

<%- contentFor('body') %>
<div id="pages-Pixel-index" class="mb-6"></div>
