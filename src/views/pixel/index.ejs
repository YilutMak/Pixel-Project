<%- contentFor('styles') %>
<%- contentFor('scripts') %>
<script>
const generateTitle = () => {
  return '<h1 class="text-center mb-3">Pixel Canvas</h1>'
}

const generateCanvas = ({ isLoading, pixels }) => {
  if (isLoading) return `<div class="text-center mb-3">Loading...</div>`

  return `
    <div id="pixel-wrapper">
      ${
        pixels.map((row, y) => {
          return `
          <div
            class="row justify-content-center align-items-center flex-nowrap mx-auto"
            style="width: ${row.length * 10}px
            border: .5px solid #C8C8C8;
            "
          >
            ${row.map((col, x) => {
            return `
                  <div
                    class="pixel-col p-0"
                    style="
                      background-color: ${col.RGB};
                      width: 9px;
                      height: 9px;
                      border: .5px solid #C8C8C8;
                    "
                  ></div>
                `
          }).join('')
            }
          </div>
        `
        }).join('')
      }
    </div>
  `


  //pixels.map((row, y) => {
  //    return `
  //      <div>
  //        ${row.map((col, x) => {
  //          return `<div style="background-color: ${col.color};"></div>`
  //        })}
  //      </div>
  //    `
  //  })
}

const generatePage = (info) => {
  const $page = $('#pages-Pixel-index')
  const $title = generateTitle(info)
  const $canvas = generateCanvas(info)
  $page.html('').append($title).append($canvas)
}

const getPixels = () => {
  axios({
        method: 'GET',
        url: '/api/pixel'
      }).then((resp) => {
        var pixels = resp.data.pixel
        //console.log(pixels)
        generatePage({pixels})
      })
}



$(document).ready(() => {
  generatePage({ isLoading: true })
  getPixels()

})
</script>

<%- contentFor('body') %>
<div id="pages-Pixel-index" class="mb-6"></div>
